version: '3.7'
services:
  nginx:
    restart: always
    image: nginx:1.17
    container_name: nginx
    ports:
      - "80:8000"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
      - ./static:/static
    depends_on:
      - backend
  backend:
    restart: always
    build:
      context: .
      dockerfile: ./config/backend/Dockerfile
    container_name: backend
    working_dir: /app/
    entrypoint:
      - /entrypoint.sh
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - ./static:/static
      - ./frontend/public:/frontend_public
    expose:
      - "8000"
  frontend:
    build:
      context: .
      dockerfile: ./config/frontend/Dockerfile
    container_name: frontend
    working_dir: /app/
    entrypoint:
      - /entrypoint.sh
    volumes:
      - ./frontend:/app
      - ./static:/static
      - /app/node_modules  # Para que persistan las dependencias instaladas en build
    environment:
      - NODE_ENV=production
  db:
    restart: always
    image: postgres:12.2
    container_name: db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data # En Windows podr√≠amos tener problemas
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
#volumes:  # En Linux/macOS podemos quitar los volumes
#  postgres: